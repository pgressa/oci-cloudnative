plugins {
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.4.5"
}

version = "1.0.0-SNAPSHOT"
group = "micronaut.mushop"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("catalogue.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut.micrometer:micronaut-micrometer-annotation:3.4.0")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-tracing")
    implementation("io.micronaut:micronaut-validation")

    // Metrics
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core:3.4.0")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    runtimeOnly("io.micronaut.oraclecloud:micronaut-oraclecloud-micrometer:1.3.4")

    // ADB access
    implementation platform("com.oracle.database.jdbc:ojdbc-bom:21.1.0.0")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    runtimeOnly("com.oracle.database.jdbc:ojdbc8")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("io.micronaut.flyway:micronaut-flyway")

    runtimeOnly("io.micronaut.oraclecloud:micronaut-oraclecloud-atp:1.3.4")
    runtimeOnly("com.oracle.oci.sdk:oci-java-sdk-monitoring")

    // Tracing
    implementation("io.opentracing.brave:brave-opentracing")
    implementation("io.swagger.core.v3:swagger-annotations")
    runtimeOnly("io.zipkin.brave:brave-instrumentation-http")
    runtimeOnly("io.zipkin.reporter2:zipkin-reporter")

    runtimeOnly("ch.qos.logback:logback-classic")

    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:oracle-xe")
    testImplementation("org.testcontainers:testcontainers")
}


application {
    mainClass.set("catalogue.Application")
}
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dockerBuild {
  images = ["iad.ocir.io/cloudnative-devrel/micronaut-showcase/mushop/$project.name:$project.version"]
}

dockerBuildNative {
  images = ["iad.ocir.io/cloudnative-devrel/micronaut-showcase/mushop/${project.name}-native:$project.version"]
}


