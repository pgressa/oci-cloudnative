plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "1.5.0"
}

version = "1.0.0-SNAPSHOT"
group = "micronaut.mushop"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("mushop.carts.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'

    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-validation")

    // ATP db access
    implementation platform("com.oracle.database.jdbc:ojdbc-bom:21.1.0.0")
    implementation("io.micronaut.oraclecloud:micronaut-oraclecloud-sdk")
    runtimeOnly("io.micronaut.oraclecloud:micronaut-oraclecloud-atp")
    implementation("io.micronaut.sql:micronaut-jdbc-ucp")
    implementation("com.oracle.database.soda:orajsoda:1.1.4")
    implementation("io.micronaut.data:micronaut-data-tx")

    implementation platform("com.oracle.database.jdbc:ojdbc-bom:21.1.0.0")
    runtimeOnly("com.oracle.database.jdbc:ojdbc8")
    runtimeOnly("com.oracle.database.security:oraclepki")
    runtimeOnly("com.oracle.database.security:osdt_cert")
    runtimeOnly("com.oracle.database.security:osdt_core")
    runtimeOnly("io.micronaut.flyway:micronaut-flyway")

    // Metrics
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    runtimeOnly("io.micronaut.oraclecloud:micronaut-oraclecloud-micrometer")

    // Tracing
    implementation("io.micronaut:micronaut-tracing")
    implementation("io.opentracing.brave:brave-opentracing")
    runtimeOnly("io.zipkin.brave:brave-instrumentation-http")
    runtimeOnly("io.zipkin.reporter2:zipkin-reporter")

    // Swagger
    implementation("io.swagger.core.v3:swagger-annotations")

    runtimeOnly("ch.qos.logback:logback-classic")

    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:oracle-xe")
    testImplementation("org.hamcrest:hamcrest")
    testImplementation("org.testcontainers:testcontainers")
}

application {
    mainClass.set("mushop.carts.Application")
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

if (javaBaseImage == "graalvm") {
    dockerfile {
        baseImage = "ghcr.io/graalvm/graalvm-ce:ol8-java11-21.1.0"
    }
}

dockerBuild {
    images = ["iad.ocir.io/cloudnative-devrel/micronaut-showcase/mushop/$project.name-${javaBaseImage}:$project.version"]
}

dockerBuildNative {
    images = ["iad.ocir.io/cloudnative-devrel/micronaut-showcase/mushop/${project.name}-native:$project.version"]
}
