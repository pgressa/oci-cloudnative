plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "1.5.0"
}

group = "micronaut.mushop"

repositories {
    mavenLocal()
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("api.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut.security:micronaut-security-session")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-session")
    runtimeOnly("ch.qos.logback:logback-classic")

    // Monitoring
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    runtimeOnly("io.micronaut.oraclecloud:micronaut-oraclecloud-micrometer")

    // Tracing
    implementation("io.micronaut:micronaut-tracing")
    implementation("io.opentracing.brave:brave-opentracing")
    runtimeOnly("io.zipkin.brave:brave-instrumentation-http")
    runtimeOnly("io.zipkin.reporter2:zipkin-reporter")

    // Kubernetes service discovery
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-discovery-client:2.3.2")

    // Redis HTTP session store
    implementation("io.micronaut.redis:micronaut-redis-lettuce:4.0.2")

    // Swagger
    implementation("io.swagger.core.v3:swagger-annotations")

    // Testing
    // https://github.com/micronaut-projects/micronaut-test/issues/423
    testImplementation enforcedPlatform("io.micronaut.test:micronaut-test-bom:2.3.3")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation("org.testcontainers:oracle-xe")
    testImplementation platform("com.oracle.database.jdbc:ojdbc-bom:21.1.0.0")
    testImplementation("com.oracle.database.jdbc:ojdbc8")
    testImplementation "org.mockito:mockito-core:3.9.0"
    testImplementation "com.github.kstyrc:embedded-redis:0.6"
}

application {
    mainClass.set("api.Application")
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

if (javaBaseImage == "graalvm") {
    dockerfile {
        baseImage = "ghcr.io/graalvm/graalvm-ce:ol8-java11-21.1.0"
    }
}

nativeImage{
    verbose(true)
}

dockerBuild {
    images = ["iad.ocir.io/cloudnative-devrel/micronaut-showcase/mushop/$project.name-${javaBaseImage}:$project.version"]
}

dockerBuildNative {
    images = ["iad.ocir.io/cloudnative-devrel/micronaut-showcase/mushop/${project.name}-native:$project.version"]
}
